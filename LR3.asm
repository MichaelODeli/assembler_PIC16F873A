; инициализация
#include p16f873a.inc
__CONFIG _HS_OSC & _WDT_OFF
ORG H'000'

; установка адресов для счетчиков временной задержки
CNT_L EQU H'7A'   
CNT_M EQU H'7B'
CNT_H EQU H'7C'
Sec1 EQU H'6A'
Sec2 EQU H'6B'
Sec3 EQU H'6C'

; активация работы кнопок и светодиодов
BSF STATUS,RP0 					; выбор банка 1
BCF STATUS,RP1
MOVLW b'11010011'				; задание пищалки и диоду режима OUTPUT
MOVWF TRISA 					; занесение параметров в РСН
MOVLW b'11000100'				; задание диодам режима OUTPUT
MOVWF TRISC 					; занесение параметров в РСН
MOVLW b'00110100' 				; задание кнопкам SA2-SA4 режима INPUT
MOVWF TRISB 					; занесение параметров в РСН
MOVWF OPTION_REG				; активируем подтягивающие резисторы
MOVLW B'00001110' 				; задаем аналоговый вход PORTA,0
MOVWF ADCON1 					; программируем регистр АЦП 1
GOTO ENABLE_ALL_DIODES			; переход к подпрограмме включения диодов
ENABLE_ALL_DIODES:
    BCF STATUS,RP0 				; выбор банка 0
    BCF STATUS,RP1
    BSF PORTC,5    				; включение всех диодов
    BSF PORTC,0    				; включение всех диодов
    BSF PORTC,1    				; включение всех диодов
    BSF PORTC,3    				; включение всех диодов
    BSF PORTC,4    				; включение всех диодов
    BSF PORTA,5    				; включение всех диодов
    GOTO WAIT_FOR_SA2_SA3		; переход к бесконечному циклу
								; с опросом кнопок

; бесконечный цикл с опросом кнопок
WAIT_FOR_SA2_SA3:
    BTFSS PORTB, 5 				; скачок, если не нажата кнопка SA2
    GOTO SA2_FUNC				; переход к подпрограмме SA2_FUNC
    BTFSS PORTB, 4 				; скачок, если не нажата кнопка SA3
    GOTO SA3_FUNC				; переход к подпрограмме SA3_FUNC
    GOTO WAIT_FOR_SA2_SA3	

; цикл с выключением диодов и работой зуммера в прямом порядке
SA2_FUNC:
    BCF PORTA,5 				; выключаем диод
    MOVLW d'90' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTC,0 				; выключаем диод
    MOVLW d'85' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTC,1 				; выключаем диод
    MOVLW d'80' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTC,3 				; выключаем диод
    MOVLW d'75' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTC,4 				; выключаем диод
    MOVLW d'70' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTC,5 				; выключаем диод
    MOVLW d'65' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки

    GOTO ENABLE_ALL_DIODES 		; переход к основной функции с опросом кнопок

; цикл с выключением диодов и работой зуммера в обратном порядке
SA3_FUNC:
    BCF PORTC,5 				; выключаем диод
    MOVLW d'65' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTC,4 				; выключаем диод
    MOVLW d'70' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTC,3 				; выключаем диод
    MOVLW d'75' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTC,1 				; выключаем диод
    MOVLW d'80' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTC,0 				; выключаем диод
    MOVLW d'85' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки
    BCF PORTA,5 				; выключаем диод
    MOVLW d'90' 				; задаем полупериод для зуммера
    CALL TIME_DELAY_SETUP 		; вызов подпрограммы врем. задержки

    GOTO ENABLE_ALL_DIODES 		; переход к основной подпрограмме


; подпрограмма предварительной настройки временной задержки
TIME_DELAY_SETUP:
    BCF STATUS,RP0 				; выбор банка 0
    BCF STATUS,RP1
    MOVWF Sec3 					; Заносим содержимое раб. регистра
								; в регистр Sec3
    MOVLW D'255' 				; переносим константу в раб. регистр
    MOVWF CNT_L					; переносим содержимое раб. регистра
								; в регистр CNT_L
    MOVLW D'3' 					; переносим константу в раб. регистр
    MOVWF CNT_M					; переносим содержимое раб. регистра
								; в регистр CNT_M
    MOVLW D'1' 					; переносим константу в раб. регистр
    MOVWF CNT_H					; переносим содержимое раб. регистра
								; в регистр CNT_M
    MOVF Sec3,W					; переносим содержимое рег. Sec3
								; в раб. регистр

; подпрограмма воспр. звука и врем. задержки
TIME_DELAY_WITH_SOUND:
    MOVWF Sec1 					; переносим содержимое раб. регистра
								; в регистр Sec1 (полупериод)
    MOVWF Sec2 					; переносим содержимое раб. регистра
								; в регистр Sec2 (полупериод)
	BSF PORTA,2					; включаем зуммер
; выдерживаем полупериод работы зуммера (для генерации импульсов)
	REPEATER:
	    BTFSS PORTB,2           ; скачок, если не нажата кнопка SA4
	    GOTO ENABLE_ALL_DIODES	; если нажата - сброс работы диодов
	    DECFSZ Sec1,F			; декремент счетчика и скачок при 0
	    GOTO REPEATER
	BCF PORTA,2
; выдерживаем полупериод "тишины" (для генерации импульсов)
	REPEATER2:
	    BTFSS PORTB,2           ; скачок, если не нажата кнопка SA4
	    GOTO ENABLE_ALL_DIODES	; если нажата - сброс работы диодов
	    DECFSZ Sec2,F			; декремент счетчика и скачок при 0
	    GOTO REPEATER2
    BTFSS PORTB,2               ;скачок, если не нажата кнопка SA4
    GOTO ENABLE_ALL_DIODES		; если нажата - сброс работы диодов
    DECFSZ CNT_L,F              ;уменьшение младшего счетчика
                                ;на 1, скачок, если 0
    GOTO TIME_DELAY_WITH_SOUND  ;возврат к декременту счетчика
    DECFSZ CNT_M,F              ;уменьшение среднего счетчика
                                ;на 1, скачок, если 0
    GOTO TIME_DELAY_WITH_SOUND  ;возврат к декременту счетчика
    DECFSZ CNT_H,F              ;уменьшение старшего счетчика
                                ;на 1, скачок, если 0
    GOTO TIME_DELAY_WITH_SOUND  ;возврат к декременту счетчика
    RETURN                      ;выход из подпрограммы

    END